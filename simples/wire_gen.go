// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package simples

import (
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializeService(isError bool) *SimpleService {
	simpleRepository := NewSimpleRepository(isError)
	simpleService := NewSimpleService(simpleRepository)
	return simpleService
}

func InitializeDatabaseMultipleBinding() *Database {
	databasePostgresDsn := NewDatabasePostgresDsn()
	databaseMongodbDsn := NewDatabaseMongodbDsn()
	database := NewDatabaseRepo(databasePostgresDsn, databaseMongodbDsn)
	return database
}

func InitializeGroupingSetFooBarControlllerMultiple() *FooBarController {
	fooRepository := NewFooRepository()
	simplesFooService := NewFooService(fooRepository)
	barRepository := NewBarRepository()
	simplesBarService := NewBarService(barRepository)
	fooBarController := NewFooBarController(simplesFooService, simplesBarService)
	return fooBarController
}

func InitializedHelloService() *HelloService {
	sayHelloImpl := NewSayHelloImpl()
	helloService := NewHelloService(sayHelloImpl)
	return helloService
}

func InitializedFooBar() *FooBar {
	foo := NewFoo()
	bar := NewBar()
	fooBar := &FooBar{
		Foo: foo,
		Bar: bar,
	}
	return fooBar
}

// injector.go:

var fooService = wire.NewSet(NewFooService, NewFooRepository)

var barService = wire.NewSet(NewBarService, NewBarRepository)

var helloSet = wire.NewSet(
	NewSayHelloImpl, wire.Bind(new(SayHello), new(*SayHelloImpl)),
)
